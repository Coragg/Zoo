/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app.gui;

import app.bd.Conexion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;


/**
 *
 * @author nicox
 */
public class MenuSecundario extends javax.swing.JFrame {

    /**
     * Creates new form MenuSecundario
     */
    public MenuSecundario() {
        initComponents();
        this.setTitle("Reporte Animal");
        this.setLocationRelativeTo(null);
        tipoAnimal.setVisible(false);
        cantidadPorTipo.setVisible(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CHKreporte = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        cantidadPorTipo = new javax.swing.JLabel();
        tipoAnimal = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel1.setText("Reporte Animal");

        jButton1.setText("Volver");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 102, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Opciones para mostrar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jCheckBox1.setBackground(new java.awt.Color(0, 102, 255));
        CHKreporte.add(jCheckBox1);
        jCheckBox1.setText("Cantidad por tipo o grupo");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(0, 102, 255));
        CHKreporte.add(jCheckBox2);
        jCheckBox2.setText("Promedio del peso por tipo o grupo de animales");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox4.setBackground(new java.awt.Color(0, 102, 255));
        CHKreporte.add(jCheckBox4);
        jCheckBox4.setText("Porcentaje de cada grupo o tipo de animales del zoológico");

        jCheckBox5.setBackground(new java.awt.Color(0, 102, 255));
        CHKreporte.add(jCheckBox5);
        jCheckBox5.setText("Mostrar la lista de animales con sus caracteristicas ");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setBackground(new java.awt.Color(0, 102, 255));
        CHKreporte.add(jCheckBox6);
        jCheckBox6.setText("Realizar búsqueda del animal por nombre");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox5)
                .addGap(12, 12, 12)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cantidadPorTipo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cantidadPorTipo.setText("aaaaa");

        tipoAnimal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mamifero", "Ave", "Pez", "Anfibio", "Reptil", "Antropodo", "Molusco", "Equinodermo", "Gusano", "Porifero", "Celentereo" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cantidadPorTipo)
                    .addComponent(tipoAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(tipoAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(cantidadPorTipo)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(311, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(225, 225, 225))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MenuPrincipal call = new MenuPrincipal();
        
        call.setVisible(true);
        
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // Verificar el estado del jCheckBox1
        if (jCheckBox1.isSelected() == true) {
        // Si está seleccionado, realizar la consulta y mostrar la cantidad de animales según su tipo
            
            int cantidad = 0;
            tipoAnimal.setVisible(true); // Manejo de excepciones
            cantidadPorTipo.setVisible(true);
            // Obtener una conexión a la base de datos
            try {
                Conexion conexion = new Conexion();
                Connection conn = conexion.getConexion();
                String opcionSeleccionada = tipoAnimal.getSelectedItem().toString();

                if (opcionSeleccionada.equals("Mamifero")){
                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Mamifero'";
                    Statement statement = conn.createStatement();
                    ResultSet resultSet = statement.executeQuery(sql);
                    cantidad = resultSet.getInt("cantidad");
                    cantidadPorTipo.setText("0");
                    cantidadPorTipo.setText(Integer.toString(cantidad));
                    // Cerrar los recursos
                    resultSet.close();
                    statement.close();
                    conn.close();
                }
                else if (opcionSeleccionada.equals("Ave")){
                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Ave'";
                    Statement statement = conn.createStatement();
                    ResultSet resultSet = statement.executeQuery(sql);
                    cantidad = resultSet.getInt("cantidad");
                    cantidadPorTipo.setText("0");
                    cantidadPorTipo.setText(Integer.toString(cantidad));
                    // Cerrar los recursos
                    resultSet.close();
                    statement.close();
                    conn.close();
                }
                else if (opcionSeleccionada.equals("Pez")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Pez'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
                else if (opcionSeleccionada.equals("Anfibio")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Anfibio'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
                else if (opcionSeleccionada.equals("Reptil")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Reptil'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
                else if (opcionSeleccionada.equals("Antropodo")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Antropodo'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
                else if (opcionSeleccionada.equals("Molusco")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Molusco'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
                else if (opcionSeleccionada.equals("Equinodermo")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Equinodermo'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
                else if (opcionSeleccionada.equals("Gusano")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Gusano'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
                else if (opcionSeleccionada.equals("Porifero")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Porifero'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
                else if (opcionSeleccionada.equals("Celentereo")){
                                    String sql = "SELECT tipo, COUNT(*) AS cantidad FROM animalesZoo WHERE tipo = 'Celentereo'";
                                    Statement statement = conn.createStatement();
                                    ResultSet resultSet = statement.executeQuery(sql);
                                    cantidad = resultSet.getInt("cantidad");
                                    cantidadPorTipo.setText("0");
                                    cantidadPorTipo.setText(Integer.toString(cantidad));
                                    // Cerrar los recursos
                                    resultSet.close();
                                    statement.close();
                                    conn.close();
                }
             } catch (SQLException ex) {
                    // Manejar el error en caso de que ocurra una excepción
                    ex.printStackTrace();
        }
            
        } else{
            // Si no está seleccionado, ocultar el jLabel cantidadPorTipo
            tipoAnimal.setVisible(false);
    }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuSecundario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuSecundario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuSecundario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuSecundario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuSecundario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup CHKreporte;
    private javax.swing.JLabel cantidadPorTipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox<String> tipoAnimal;
    // End of variables declaration//GEN-END:variables
}